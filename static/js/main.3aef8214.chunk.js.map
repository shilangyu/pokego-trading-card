{"version":3,"sources":["actions/index.js","actions/pokeselection.js","components/Pokeselection/Pokefield.jsx","reducers/index.js","reducers/pokeselection.js","reducers/pokepreview.js","store.js","components/Pokeselection/Pokelist.jsx","components/Pokeselection/Pokebar.jsx","containers/Pokeselection.js","components/Pokeselection/index.js","components/Pokepreview/Pokesprite.jsx","components/Pokepreview/Pokecanvas.jsx","containers/Pokepreview.js","components/Pokepreview/index.js","components/App.jsx","serviceWorker.js","index.js"],"names":["_pokeselection__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","loadPokemonList","type","payload","Object","C_Coding_pokego_trading_card_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Coding_pokego_trading_card_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","calls","responses","results","wrap","_context","prev","next","config","existingPokemon","generations","map","e","apiUrl","base","generation","replace","Promise","all","fetch","sent","json","abrupt","stop","this","togglePokemonSelection","pokemonId","updateSearchValue","value","Pokefield","_ref","name","id","selected","react_default","createElement","Fragment","onClick","defaultChecked","htmlFor","combineReducers","pokeselection","state","arguments","length","undefined","action","pokemonList","reduce","curr","idExtractor","pokeWithIds","pokemon_species","url","Number","exec","groups","concat","toConsumableArray","sort","b","objectSpread","selectedPokemons","includes","filter","searchValue","pokepreview","initialState","middleware","applyMiddleware","promise","createStore","rootReducer","styles","root","width","height","overflowY","backgroundColor","form","display","gridTemplateColumns","gridGap","Pokelist","_this$props","props","store","getState","style","key","Component","Pokebar","onChange","target","connect","dispatch","Pokeselection_Pokebar","Pokeselection_Pokelist","Pokesprite","image","_this2","window","Image","src","onload","setState","x","y","ReactKonva","Pokecanvas","Pokepreview_Pokesprite","Pokepreview_Pokecanvas","App","es","containers_Pokeselection","containers_Pokepreview","Boolean","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3aef8214.chunk.js","sourcesContent":["export * from './pokeselection'\r\nexport * from './pokepreview'\r\n","import config from '../constants/config.json'\r\nimport apiUrl from '../constants/api.json'\r\n\r\nexport const loadPokemonList = {\r\n\ttype: 'LOAD_POKEMON_LIST',\r\n\tpayload: (async () => {\r\n\t\tconst calls = config.existingPokemon.generations.map(\r\n\t\t\te => apiUrl.base + apiUrl.generation.replace(':id', e)\r\n\t\t)\r\n\t\tconst responses = await Promise.all(calls.map(e => fetch(e)))\r\n\t\tconst results = await Promise.all(responses.map(e => e.json()))\r\n\r\n\t\treturn results\r\n\t})()\r\n}\r\n\r\nexport const togglePokemonSelection = pokemonId => ({\r\n\ttype: 'TOGGLE_POKEMON_SELECTION',\r\n\tpokemonId\r\n})\r\n\r\nexport const updateSearchValue = value => ({\r\n\ttype: 'UPDATE_SEARCH_VALUE',\r\n\tvalue\r\n})\r\n","import React from 'react'\r\n\r\nexport default ({ name, id, togglePokemonSelection, selected }) => (\r\n\t<>\r\n\t\t<input\r\n\t\t\ttype=\"checkbox\"\r\n\t\t\tname={name}\r\n\t\t\tonClick={() => togglePokemonSelection(id)}\r\n\t\t\tdefaultChecked={selected}\r\n\t\t/>\r\n\t\t<label htmlFor={name}>{name}</label>\r\n\t</>\r\n)\r\n","import { combineReducers } from 'redux'\r\n\r\nimport pokeselection from './pokeselection'\r\nimport pokepreview from './pokepreview'\r\n\r\nexport default combineReducers({\r\n\tpokeselection,\r\n\tpokepreview\r\n})\r\n","export default (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'LOAD_POKEMON_LIST_FULFILLED': {\r\n\t\t\tconst pokemonList = action.payload.reduce((prev, curr) => {\r\n\t\t\t\tconst idExtractor = /\\/(?<id>\\d{1,3})\\/$/\r\n\r\n\t\t\t\tconst pokeWithIds = curr.pokemon_species.map(({ name, url }) => ({\r\n\t\t\t\t\tname,\r\n\t\t\t\t\turl,\r\n\t\t\t\t\tid: Number(idExtractor.exec(url).groups.id)\r\n\t\t\t\t}))\r\n\r\n\t\t\t\treturn [...prev, ...pokeWithIds]\r\n\t\t\t}, [])\r\n\t\t\tpokemonList.sort((a, b) => a.id - b.id)\r\n\r\n\t\t\treturn { ...state, pokemonList }\r\n\t\t}\r\n\r\n\t\tcase 'LOAD_POKEMON_LIST_REJECTED': {\r\n\t\t\tconst pokemonList = null\r\n\t\t\treturn { ...state, pokemonList }\r\n\t\t}\r\n\r\n\t\tcase 'TOGGLE_POKEMON_SELECTION': {\r\n\t\t\tlet selectedPokemons = []\r\n\t\t\tif (selectedPokemons.includes(action.pokemonId))\r\n\t\t\t\tselectedPokemons = state.selectedPokemons.filter(e => e !== action.pokemonId)\r\n\t\t\telse selectedPokemons = [...state.selectedPokemons, action.pokemonId]\r\n\t\t\treturn { ...state, selectedPokemons }\r\n\t\t}\r\n\r\n\t\tcase 'UPDATE_SEARCH_VALUE': {\r\n\t\t\tconst searchValue = action.value\r\n\t\t\treturn { ...state, searchValue }\r\n\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n","export default (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport promise from 'redux-promise-middleware'\r\nimport rootReducer from './reducers'\r\n\r\nexport const initialState = {\r\n\tpokeselection: {\r\n\t\tsearchValue: '',\r\n\t\tselectedPokemons: [],\r\n\t\tpokemonList: undefined\r\n\t},\r\n\tpokepreview: {}\r\n}\r\n\r\nconst middleware = applyMiddleware(promise())\r\n\r\nexport default createStore(rootReducer, initialState, middleware)\r\n","import React, { Component } from 'react'\r\nimport Pokefield from './Pokefield.jsx'\r\nimport store from '../../store'\r\n\r\nconst styles = {\r\n\troot: {\r\n\t\twidth: '100%',\r\n\t\theight: '30rem',\r\n\t\toverflowY: 'scroll',\r\n\t\tbackgroundColor: 'rgb(150, 150, 150)'\r\n\t},\r\n\tform: {\r\n\t\tdisplay: 'grid',\r\n\t\tgridTemplateColumns: 'repeat(auto-fit, 130px)',\r\n\t\tgridGap: '10px'\r\n\t}\r\n}\r\n\r\nclass Pokelist extends Component {\r\n\trender() {\r\n\t\tconst { togglePokemonSelection, selectedPokemons, pokemonList } = this.props\r\n\t\tconst { searchValue } = store.getState().pokeselection\r\n\r\n\t\treturn pokemonList === undefined ? (\r\n\t\t\t<> Pokemons loading... </>\r\n\t\t) : pokemonList ? (\r\n\t\t\t<div style={styles.root}>\r\n\t\t\t\t<form style={styles.form}>\r\n\t\t\t\t\t{pokemonList.map(({ name, id }) =>\r\n\t\t\t\t\t\tname.includes(searchValue) ? (\r\n\t\t\t\t\t\t\t<div key={name}>\r\n\t\t\t\t\t\t\t\t<Pokefield\r\n\t\t\t\t\t\t\t\t\tname={name}\r\n\t\t\t\t\t\t\t\t\tid={id}\r\n\t\t\t\t\t\t\t\t\tselected={selectedPokemons.includes(id)}\r\n\t\t\t\t\t\t\t\t\ttogglePokemonSelection={togglePokemonSelection}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : null\r\n\t\t\t\t\t)}\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t) : (\r\n\t\t\t<> Error loading the Pokemons! </>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Pokelist\r\n","import React, { Component } from 'react'\r\n\r\nclass Pokebar extends Component {\r\n\trender() {\r\n\t\tconst { searchValue, updateSearchValue } = this.props\r\n\r\n\t\treturn <input type=\"text\" value={searchValue} onChange={e => updateSearchValue(e.target.value)}/>\r\n\t}\r\n}\r\n\r\nexport default Pokebar\r\n","import { connect } from 'react-redux'\r\n\r\nimport { togglePokemonSelection, updateSearchValue, loadPokemonList } from '../actions'\r\n\r\nimport Pokeselection from '../components/Pokeselection'\r\n\r\nconst mapStatesToProps = ({ pokeselection: state }) => ({\r\n\t...state\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\tdispatch(loadPokemonList)\r\n\r\n\treturn {\r\n\t\ttogglePokemonSelection: pokemonId => dispatch(togglePokemonSelection(pokemonId)),\r\n\t\tupdateSearchValue: value => dispatch(updateSearchValue(value))\r\n\t}\r\n}\r\n\r\nexport default connect(\r\n\tmapStatesToProps,\r\n\tmapDispatchToProps\r\n)(Pokeselection)\r\n","import React from 'react'\r\nimport Pokelist from './Pokelist.jsx'\r\nimport Pokebar from './Pokebar.jsx'\r\n\r\nexport default ({\r\n\tsearchValue,\r\n\tupdateSearchValue,\r\n\tselectedPokemons,\r\n\ttogglePokemonSelection,\r\n\tpokemonList\r\n}) => (\r\n\t<>\r\n\t\t<Pokebar searchValue={searchValue} updateSearchValue={updateSearchValue} />\r\n\t\t<Pokelist\r\n\t\t\tpokemonList={pokemonList}\r\n\t\t\tselectedPokemons={selectedPokemons}\r\n\t\t\ttogglePokemonSelection={togglePokemonSelection}\r\n\t\t/>\r\n\t</>\r\n)\r\n","import React, { Component } from 'react'\r\nimport { Image } from 'react-konva'\r\n\r\nclass Pokesprite extends Component {\r\n\tstate = {\r\n\t\timage: null\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst image = new window.Image()\r\n\t\timage.src = this.props.url\r\n\t\timage.onload = () => this.setState({ image })\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { x, y } = this.props\r\n\r\n\t\treturn <Image image={this.state.image} x={x} y={y} />\r\n\t}\r\n}\r\n\r\nexport default Pokesprite\r\n","import React, { Component } from 'react'\r\nimport { Stage, Layer } from 'react-konva'\r\nimport Pokesprite from './Pokesprite.jsx'\r\n\r\nclass Pokecanvas extends Component {\r\n\tstate = {\r\n\t\timage: null\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Stage width={1000} height={200}>\r\n\t\t\t\t<Layer>\r\n\t\t\t\t\t<Pokesprite url={'https://konvajs.github.io/assets/yoda.jpg'} x={200} />\r\n\t\t\t\t</Layer>\r\n\t\t\t</Stage>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Pokecanvas\r\n","import { connect } from 'react-redux'\r\n\r\n// import { togglePokemonSelection, updateSearchValue, loadPokemonList } from '../actions'\r\n\r\nimport Pokepreview from '../components/Pokepreview'\r\n\r\nconst mapStatesToProps = ({ pokepreview: state }) => ({\r\n\t...state\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t}\r\n}\r\n\r\nexport default connect(\r\n\tmapStatesToProps,\r\n\tmapDispatchToProps\r\n)(Pokepreview)\r\n","import React from 'react'\r\nimport Pokecanvas from './Pokecanvas.jsx'\r\n\r\nexport default ({\r\n\tsearchValue,\r\n\tupdateSearchValue,\r\n\tselectedPokemons,\r\n\ttogglePokemonSelection,\r\n\tpokemonList\r\n}) => (\r\n\t<>\r\n\t\t<Pokecanvas />\r\n\t</>\r\n)\r\n","import React, { Component } from 'react'\nimport { Provider } from 'react-redux'\nimport Pokeselection from '../containers/Pokeselection'\nimport Pokepreview from '../containers/Pokepreview'\nimport store from '../store'\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Provider store={store}>\n\t\t\t\t<Pokeselection />\n\t\t\t\t<Pokepreview />\n\t\t\t</Provider>\n\t\t)\n\t}\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App.jsx'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}