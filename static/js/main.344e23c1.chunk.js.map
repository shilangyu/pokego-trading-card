{"version":3,"sources":["actions/index.js","actions/pokeselection.js","components/Pokeselection/Pokefield.jsx","reducers/index.js","reducers/pokeselection.js","reducers/pokepreview.js","store.js","components/Pokeselection/Pokelist.jsx","components/Pokeselection/Pokebar.jsx","containers/Pokeselection.js","components/Pokeselection/index.js","components/Pokepreview/Pokesprite.jsx","components/Pokepreview/Pokecanvas.jsx","containers/Pokepreview.js","components/Pokepreview/index.js","components/App.jsx","serviceWorker.js","index.js"],"names":["_pokeselection__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","loadPokemonList","type","payload","Object","C_Coding_pokego_trading_card_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Coding_pokego_trading_card_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","calls","responses","results","wrap","_context","prev","next","config","existingPokemon","generations","map","e","apiUrl","base","generation","replace","Promise","all","fetch","sent","json","abrupt","stop","this","toggleNeededPokemonSelection","pokemonId","updateSearchValue","value","Pokefield","_ref","name","id","togglePokemonSelection","selected","react_default","createElement","Fragment","onClick","defaultChecked","htmlFor","combineReducers","pokeselection","state","arguments","length","undefined","action","pokemonList","reduce","curr","idExtractor","pokeWithIds","pokemon_species","url","Number","exec","groups","concat","toConsumableArray","sort","b","objectSpread","neededPokemons","includes","filter","searchValue","pokepreview","initialState","middleware","applyMiddleware","promise","createStore","rootReducer","styles","root","width","height","overflowY","backgroundColor","form","display","gridTemplateColumns","gridGap","Pokelist","_this$props","props","selectedPokemons","store","getState","style","key","Component","Pokebar","onChange","target","connect","dispatch","Pokeselection_Pokebar","Pokeselection_Pokelist","Pokesprite","image","_this2","window","Image","src","onload","setState","x","y","ReactKonva","text","offset","perRow","Pokecanvas","spriteUrls","Math","min","ceil","i","floor","Pokepreview_Pokesprite","urls","sprite","Pokepreview_Pokecanvas","App","es","containers_Pokeselection","containers_Pokepreview","Boolean","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.344e23c1.chunk.js","sourcesContent":["export * from './pokeselection'\r\nexport * from './pokepreview'\r\n","import config from '../constants/config.json'\r\nimport apiUrl from '../constants/api.json'\r\n\r\nexport const loadPokemonList = {\r\n\ttype: 'LOAD_POKEMON_LIST',\r\n\tpayload: (async () => {\r\n\t\tconst calls = config.existingPokemon.generations.map(\r\n\t\t\te => apiUrl.base + apiUrl.generation.replace(':id', e)\r\n\t\t)\r\n\t\tconst responses = await Promise.all(calls.map(e => fetch(e)))\r\n\t\tconst results = await Promise.all(responses.map(e => e.json()))\r\n\r\n\t\treturn results\r\n\t})()\r\n}\r\n\r\nexport const toggleNeededPokemonSelection = pokemonId => ({\r\n\ttype: 'TOGGLE_NEEDED_POKEMON_SELECTION',\r\n\tpokemonId\r\n})\r\n\r\nexport const updateSearchValue = value => ({\r\n\ttype: 'UPDATE_SEARCH_VALUE',\r\n\tvalue\r\n})\r\n","import React from 'react'\r\n\r\nexport default ({ name, id, togglePokemonSelection, selected }) => (\r\n\t<>\r\n\t\t<input\r\n\t\t\ttype=\"checkbox\"\r\n\t\t\tname={name}\r\n\t\t\tonClick={() => togglePokemonSelection(id)}\r\n\t\t\tdefaultChecked={selected}\r\n\t\t/>\r\n\t\t<label htmlFor={name}>{name}</label>\r\n\t</>\r\n)\r\n","import { combineReducers } from 'redux'\r\n\r\nimport pokeselection from './pokeselection'\r\nimport pokepreview from './pokepreview'\r\n\r\nexport default combineReducers({\r\n\tpokeselection,\r\n\tpokepreview\r\n})\r\n","export default (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'LOAD_POKEMON_LIST_FULFILLED': {\r\n\t\t\tconst pokemonList = action.payload.reduce((prev, curr) => {\r\n\t\t\t\tconst idExtractor = /\\/(?<id>\\d{1,3})\\/$/\r\n\r\n\t\t\t\tconst pokeWithIds = curr.pokemon_species.map(({ name, url }) => ({\r\n\t\t\t\t\tname,\r\n\t\t\t\t\turl,\r\n\t\t\t\t\tid: Number(idExtractor.exec(url).groups.id)\r\n\t\t\t\t}))\r\n\r\n\t\t\t\treturn [...prev, ...pokeWithIds]\r\n\t\t\t}, [])\r\n\t\t\tpokemonList.sort((a, b) => a.id - b.id)\r\n\r\n\t\t\treturn { ...state, pokemonList }\r\n\t\t}\r\n\r\n\t\tcase 'LOAD_POKEMON_LIST_REJECTED': {\r\n\t\t\tconst pokemonList = null\r\n\t\t\treturn { ...state, pokemonList }\r\n\t\t}\r\n\r\n\t\tcase 'TOGGLE_NEEDED_POKEMON_SELECTION': {\r\n\t\t\tlet neededPokemons = []\r\n\t\t\tif (neededPokemons.includes(action.pokemonId))\r\n\t\t\t\tneededPokemons = state.neededPokemons.filter(e => e !== action.pokemonId)\r\n\t\t\telse neededPokemons = [...state.neededPokemons, action.pokemonId]\r\n\t\t\treturn { ...state, neededPokemons }\r\n\t\t}\r\n\r\n\t\tcase 'UPDATE_SEARCH_VALUE': {\r\n\t\t\tconst searchValue = action.value\r\n\t\t\treturn { ...state, searchValue }\r\n\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n","export default (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport promise from 'redux-promise-middleware'\r\nimport rootReducer from './reducers'\r\n\r\nexport const initialState = {\r\n\tpokeselection: {\r\n\t\tsearchValue: '',\r\n\t\tneededPokemons: [],\r\n\t\tpokemonList: undefined\r\n\t},\r\n\tpokepreview: {}\r\n}\r\n\r\nconst middleware = applyMiddleware(promise())\r\n\r\nexport default createStore(rootReducer, initialState, middleware)\r\n","import React, { Component } from 'react'\r\nimport Pokefield from './Pokefield.jsx'\r\nimport store from '../../store'\r\n\r\nconst styles = {\r\n\troot: {\r\n\t\twidth: '100%',\r\n\t\theight: '30rem',\r\n\t\toverflowY: 'scroll',\r\n\t\tbackgroundColor: 'rgb(150, 150, 150)'\r\n\t},\r\n\tform: {\r\n\t\tdisplay: 'grid',\r\n\t\tgridTemplateColumns: 'repeat(auto-fit, 130px)',\r\n\t\tgridGap: '10px'\r\n\t}\r\n}\r\n\r\nclass Pokelist extends Component {\r\n\trender() {\r\n\t\tconst { togglePokemonSelection, selectedPokemons, pokemonList } = this.props\r\n\t\tconst { searchValue } = store.getState().pokeselection\r\n\r\n\t\treturn pokemonList === undefined ? (\r\n\t\t\t<> Pokemons loading... </>\r\n\t\t) : pokemonList ? (\r\n\t\t\t<div style={styles.root}>\r\n\t\t\t\t<form style={styles.form}>\r\n\t\t\t\t\t{pokemonList.map(({ name, id }) =>\r\n\t\t\t\t\t\tname.includes(searchValue) ? (\r\n\t\t\t\t\t\t\t<div key={name}>\r\n\t\t\t\t\t\t\t\t<Pokefield\r\n\t\t\t\t\t\t\t\t\tname={name}\r\n\t\t\t\t\t\t\t\t\tid={id}\r\n\t\t\t\t\t\t\t\t\tselected={selectedPokemons.includes(id)}\r\n\t\t\t\t\t\t\t\t\ttogglePokemonSelection={togglePokemonSelection}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : null\r\n\t\t\t\t\t)}\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t) : (\r\n\t\t\t<> Error loading the Pokemons! </>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Pokelist\r\n","import React, { Component } from 'react'\r\n\r\nclass Pokebar extends Component {\r\n\trender() {\r\n\t\tconst { searchValue, updateSearchValue } = this.props\r\n\r\n\t\treturn <input type=\"text\" value={searchValue} onChange={e => updateSearchValue(e.target.value)}/>\r\n\t}\r\n}\r\n\r\nexport default Pokebar\r\n","import { connect } from 'react-redux'\r\n\r\nimport { toggleNeededPokemonSelection, updateSearchValue, loadPokemonList } from '../actions'\r\n\r\nimport Pokeselection from '../components/Pokeselection'\r\n\r\nconst mapStatesToProps = ({ pokeselection }) => ({\r\n\t...pokeselection\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\tdispatch(loadPokemonList)\r\n\r\n\treturn {\r\n\t\ttoggleNeededPokemonSelection: pokemonId => dispatch(toggleNeededPokemonSelection(pokemonId)),\r\n\t\tupdateSearchValue: value => dispatch(updateSearchValue(value))\r\n\t}\r\n}\r\n\r\nexport default connect(\r\n\tmapStatesToProps,\r\n\tmapDispatchToProps\r\n)(Pokeselection)\r\n","import React from 'react'\r\nimport Pokelist from './Pokelist.jsx'\r\nimport Pokebar from './Pokebar.jsx'\r\n\r\nexport default ({\r\n\tsearchValue,\r\n\tupdateSearchValue,\r\n\tneededPokemons,\r\n\ttoggleNeededPokemonSelection,\r\n\tpokemonList\r\n}) => (\r\n\t<>\r\n\t\t<Pokebar searchValue={searchValue} updateSearchValue={updateSearchValue} />\r\n\t\t<Pokelist\r\n\t\t\tpokemonList={pokemonList}\r\n\t\t\tselectedPokemons={neededPokemons}\r\n\t\t\ttogglePokemonSelection={toggleNeededPokemonSelection}\r\n\t\t/>\r\n\t</>\r\n)\r\n","import React, { Component } from 'react'\r\nimport { Image, Text } from 'react-konva'\r\n\r\nclass Pokesprite extends Component {\r\n\tstate = {\r\n\t\timage: null\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst image = new window.Image()\r\n\t\timage.src = this.props.url\r\n\t\timage.onload = () => this.setState({ image })\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { x, y } = this.props\r\n\r\n\t\treturn this.state.image ? (\r\n\t\t\t<Image image={this.state.image} x={x} y={y} />\r\n\t\t) : (\r\n\t\t\t<Text text=\"Loading sprite...\" x={x} y={y} />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Pokesprite\r\n","import React, { Component } from 'react'\r\nimport { Stage, Layer } from 'react-konva'\r\nimport Pokesprite from './Pokesprite.jsx'\r\n\r\nconst config = {\r\n\tsprite: {\r\n\t\toffset: { x: 100, y: 100 },\r\n\t\tperRow: 10\r\n\t}\r\n}\r\n\r\nclass Pokecanvas extends Component {\r\n\trender() {\r\n\t\tconst { spriteUrls } = this.props\r\n\r\n\t\tconst width = Math.min(config.sprite.perRow, spriteUrls.length) * config.sprite.offset.x\r\n\t\tconst height = Math.ceil(spriteUrls.length / config.sprite.perRow) * config.sprite.offset.y\r\n\t\treturn (\r\n\t\t\t<Stage width={width} height={height}>\r\n\t\t\t\t<Layer>\r\n\t\t\t\t\t{spriteUrls.map((url, i) => {\r\n\t\t\t\t\t\tconst x = config.sprite.offset.x * (i % config.sprite.perRow)\r\n\t\t\t\t\t\tconst y = config.sprite.offset.y * Math.floor(i / config.sprite.perRow)\r\n\t\t\t\t\t\treturn <Pokesprite key={url} url={url} x={x} y={y} />\r\n\t\t\t\t\t})}\r\n\t\t\t\t</Layer>\r\n\t\t\t</Stage>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Pokecanvas\r\n","import { connect } from 'react-redux'\r\n\r\nimport urls from '../constants/api.json'\r\n\r\nimport Pokepreview from '../components/Pokepreview'\r\n\r\nconst mapStatesToProps = ({ pokeselection }) => ({\r\n\tspriteUrls: pokeselection.neededPokemons.map(id => urls.sprite.replace(':id', id))\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {}\r\n}\r\n\r\nexport default connect(\r\n\tmapStatesToProps,\r\n\tmapDispatchToProps\r\n)(Pokepreview)\r\n","import React from 'react'\r\nimport Pokecanvas from './Pokecanvas.jsx'\r\n\r\nexport default props => <Pokecanvas {...props} />\r\n","import React, { Component } from 'react'\nimport { Provider } from 'react-redux'\nimport Pokeselection from '../containers/Pokeselection'\nimport Pokepreview from '../containers/Pokepreview'\nimport store from '../store'\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Provider store={store}>\n\t\t\t\t<Pokeselection />\n\t\t\t\t<Pokepreview />\n\t\t\t</Provider>\n\t\t)\n\t}\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App.jsx'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}