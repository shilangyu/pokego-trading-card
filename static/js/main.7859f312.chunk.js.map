{"version":3,"sources":["actions/index.js","actions/pokeselection.js","components/Pokeselection/Pokefield.jsx","reducers/index.js","reducers/pokeselection.js","reducers/pokepreview.js","store.js","components/Pokeselection/Pokelist.jsx","components/Pokeselection/Pokebar.jsx","components/Pokeselection/index.js","containers/Pokeselection.js","components/Pokepreview/Pokesprite.jsx","components/Pokepreview/Pokesection.jsx","components/Pokepreview/index.js","containers/Pokepreview.js","components/App.jsx","serviceWorker.js","index.js"],"names":["_pokeselection__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","loadPokemonList","type","payload","Object","C_Coding_pokego_trading_card_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Coding_pokego_trading_card_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","calls","responses","results","wrap","_context","prev","next","config","existingPokemon","generations","map","e","apiUrl","base","generation","replace","Promise","all","fetch","sent","json","abrupt","stop","this","toggleNeededPokemonSelection","pokemonId","toggleOfferedPokemonSelection","updateSearchValue","value","styles","input","float","label","Pokefield","_ref","name","id","togglePokemonSelection","selected","react_default","createElement","onClick","preventDefault","style","checked","readOnly","htmlFor","combineReducers","pokeselection","state","arguments","length","undefined","action","pokemonList","reduce","curr","idExtractor","pokeWithIds","pokemon_species","url","Number","exec","groups","concat","toConsumableArray","sort","b","objectSpread","neededPokemons","includes","filter","offeredPokemons","searchValue","pokepreview","initialState","middleware","applyMiddleware","promise","createStore","rootReducer","form","display","gridTemplateColumns","gridGap","Pokelist","_this$props","props","selectedPokemons","rootStyles","store","getState","Fragment","key","Component","Pokebar","onChange","target","pokebar","pokelist","width","height","overflowY","connect","dispatch","Pokeselection_Pokebar","Pokeselection_Pokelist","Pokesprite","image","_this2","window","Image","src","onload","setState","onerror","x","y","ReactKonva","text","Pokesection","spriteUrls","yOffset","gradientColors","Math","min","sprite","perRow","offset","ceil","fillLinearGradientStartPoint","fillLinearGradientEndPoint","fillLinearGradientColorStops","align","verticalAlign","fontFamily","fontSize","i","floor","Pokepreview_Pokesprite","neededSpriteUrls","offeredSpriteUrls","width1","height1","width2","height2","max","Pokepreview_Pokesection","urls","Pokepreview","App","es","containers_Pokeselection","Boolean","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7859f312.chunk.js","sourcesContent":["export * from './pokeselection'\r\nexport * from './pokepreview'\r\n","import config from '../constants/config.json'\r\nimport apiUrl from '../constants/api.json'\r\n\r\nexport const loadPokemonList = {\r\n\ttype: 'LOAD_POKEMON_LIST',\r\n\tpayload: (async () => {\r\n\t\tconst calls = config.existingPokemon.generations.map(\r\n\t\t\te => apiUrl.base + apiUrl.generation.replace(':id', e)\r\n\t\t)\r\n\t\tconst responses = await Promise.all(calls.map(e => fetch(e)))\r\n\t\tconst results = await Promise.all(responses.map(e => e.json()))\r\n\r\n\t\treturn results\r\n\t})()\r\n}\r\n\r\nexport const toggleNeededPokemonSelection = pokemonId => ({\r\n\ttype: 'TOGGLE_NEEDED_POKEMON_SELECTION',\r\n\tpokemonId\r\n})\r\n\r\nexport const toggleOfferedPokemonSelection = pokemonId => ({\r\n\ttype: 'TOGGLE_OFFERED_POKEMON_SELECTION',\r\n\tpokemonId\r\n})\r\n\r\nexport const updateSearchValue = value => ({\r\n\ttype: 'UPDATE_SEARCH_VALUE',\r\n\tvalue\r\n})\r\n","import React from 'react'\r\nconst styles = {\r\n\tinput: {\r\n\t\tfloat: 'left'\r\n\t},\r\n\tlabel: {\r\n\t\tfloat: 'right'\r\n\t}\r\n}\r\nexport default ({ name, id, togglePokemonSelection, selected }) => (\r\n\t<button\r\n\t\tonClick={e => {\r\n\t\t\te.preventDefault()\r\n\t\t\ttogglePokemonSelection(id)\r\n\t\t}}\r\n\t>\r\n\t\t<input style={styles.input} type=\"checkbox\" name={name} checked={selected} readOnly />\r\n\t\t<label htmlFor={name} style={styles.label}>{name}</label>\r\n\t</button>\r\n)\r\n","import { combineReducers } from 'redux'\r\n\r\nimport pokeselection from './pokeselection'\r\nimport pokepreview from './pokepreview'\r\n\r\nexport default combineReducers({\r\n\tpokeselection,\r\n\tpokepreview\r\n})\r\n","export default (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'LOAD_POKEMON_LIST_FULFILLED': {\r\n\t\t\tconst pokemonList = action.payload.reduce((prev, curr) => {\r\n\t\t\t\tconst idExtractor = /\\/(?<id>\\d{1,3})\\/$/\r\n\r\n\t\t\t\tconst pokeWithIds = curr.pokemon_species.map(({ name, url }) => ({\r\n\t\t\t\t\tname,\r\n\t\t\t\t\turl,\r\n\t\t\t\t\tid: Number(idExtractor.exec(url).groups.id)\r\n\t\t\t\t}))\r\n\r\n\t\t\t\treturn [...prev, ...pokeWithIds]\r\n\t\t\t}, [])\r\n\t\t\tpokemonList.sort((a, b) => a.id - b.id)\r\n\r\n\t\t\treturn { ...state, pokemonList }\r\n\t\t}\r\n\r\n\t\tcase 'LOAD_POKEMON_LIST_REJECTED': {\r\n\t\t\tconst pokemonList = null\r\n\t\t\treturn { ...state, pokemonList }\r\n\t\t}\r\n\r\n\t\tcase 'TOGGLE_NEEDED_POKEMON_SELECTION': {\r\n\t\t\tlet neededPokemons = []\r\n\t\t\tif (state.neededPokemons.includes(action.pokemonId))\r\n\t\t\t\tneededPokemons = state.neededPokemons.filter(e => e !== action.pokemonId)\r\n\t\t\telse neededPokemons = [...state.neededPokemons, action.pokemonId]\r\n\r\n\t\t\treturn { ...state, neededPokemons }\r\n\t\t}\r\n\r\n\t\tcase 'TOGGLE_OFFERED_POKEMON_SELECTION': {\r\n\t\t\tlet offeredPokemons = []\r\n\t\t\tif (state.offeredPokemons.includes(action.pokemonId))\r\n\t\t\t\tofferedPokemons = state.offeredPokemons.filter(e => e !== action.pokemonId)\r\n\t\t\telse offeredPokemons = [...state.offeredPokemons, action.pokemonId]\r\n\r\n\t\t\treturn { ...state, offeredPokemons }\r\n\t\t}\r\n\r\n\t\tcase 'UPDATE_SEARCH_VALUE': {\r\n\t\t\tconst searchValue = action.value\r\n\t\t\treturn { ...state, searchValue }\r\n\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n","export default (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport promise from 'redux-promise-middleware'\r\nimport rootReducer from './reducers'\r\n\r\nexport const initialState = {\r\n\tpokeselection: {\r\n\t\tsearchValue: '',\r\n\t\tneededPokemons: [],\r\n\t\tofferedPokemons: [],\r\n\t\tpokemonList: undefined\r\n\t},\r\n\tpokepreview: {}\r\n}\r\n\r\nconst middleware = applyMiddleware(promise())\r\n\r\nexport default createStore(rootReducer, initialState, middleware)\r\n","import React, { Component } from 'react'\r\nimport Pokefield from './Pokefield.jsx'\r\nimport store from '../../store'\r\n\r\nconst styles = {\r\n\tform: {\r\n\t\tdisplay: 'grid',\r\n\t\tgridTemplateColumns: 'repeat(auto-fit, 130px)',\r\n\t\tgridGap: '10px'\r\n\t}\r\n}\r\n\r\nclass Pokelist extends Component {\r\n\trender() {\r\n\t\tconst { togglePokemonSelection, selectedPokemons, pokemonList, rootStyles } = this.props\r\n\t\tconst { searchValue } = store.getState().pokeselection\r\n\r\n\t\treturn pokemonList === undefined ? (\r\n\t\t\t<> Pokemons loading... </>\r\n\t\t) : pokemonList ? (\r\n\t\t\t<div style={rootStyles}>\r\n\t\t\t\t<form style={styles.form}>\r\n\t\t\t\t\t{pokemonList.map(({ name, id }) =>\r\n\t\t\t\t\t\tname.includes(searchValue) ? (\r\n\t\t\t\t\t\t\t<Pokefield\r\n\t\t\t\t\t\t\t\tkey={name}\r\n\t\t\t\t\t\t\t\tname={name}\r\n\t\t\t\t\t\t\t\tid={id}\r\n\t\t\t\t\t\t\t\tselected={selectedPokemons.includes(id)}\r\n\t\t\t\t\t\t\t\ttogglePokemonSelection={togglePokemonSelection}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : null\r\n\t\t\t\t\t)}\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t) : (\r\n\t\t\t<> Error loading the Pokemons! </>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Pokelist\r\n","import React, { Component } from 'react'\r\n\r\nclass Pokebar extends Component {\r\n\trender() {\r\n\t\tconst { searchValue, updateSearchValue } = this.props\r\n\r\n\t\treturn <input type=\"search\" value={searchValue} onChange={e => updateSearchValue(e.target.value)}/>\r\n\t}\r\n}\r\n\r\nexport default Pokebar\r\n","import React from 'react'\r\nimport Pokelist from './Pokelist.jsx'\r\nimport Pokebar from './Pokebar.jsx'\r\n\r\nconst styles = {\r\n\tpokebar: {},\r\n\tpokelist: {\r\n\t\tdisplay: 'inline-block',\r\n\t\twidth: '50%',\r\n\t\theight: '30rem',\r\n\t\toverflowY: 'scroll',\r\n\t\t// backgroundColor: 'rgb(150, 150, 150)'\r\n\t}\r\n}\r\n\r\nexport default ({\r\n\tsearchValue,\r\n\tupdateSearchValue,\r\n\tneededPokemons,\r\n\ttoggleNeededPokemonSelection,\r\n\tofferedPokemons,\r\n\ttoggleOfferedPokemonSelection,\r\n\tpokemonList\r\n}) => (\r\n\t<>\r\n\t\t<Pokebar searchValue={searchValue} updateSearchValue={updateSearchValue} /> <br />\r\n\t\t<Pokelist\r\n\t\t\trootStyles={styles.pokelist}\r\n\t\t\tpokemonList={pokemonList}\r\n\t\t\tselectedPokemons={neededPokemons}\r\n\t\t\ttogglePokemonSelection={toggleNeededPokemonSelection}\r\n\t\t/>\r\n\t\t<Pokelist\r\n\t\t\trootStyles={styles.pokelist}\r\n\t\t\tpokemonList={pokemonList}\r\n\t\t\tselectedPokemons={offeredPokemons}\r\n\t\t\ttogglePokemonSelection={toggleOfferedPokemonSelection}\r\n\t\t/>\r\n\t</>\r\n)\r\n","import { connect } from 'react-redux'\r\n\r\nimport { toggleNeededPokemonSelection, updateSearchValue, loadPokemonList, toggleOfferedPokemonSelection } from '../actions'\r\n\r\nimport Pokeselection from '../components/Pokeselection'\r\n\r\nconst mapStatesToProps = ({ pokeselection }) => ({\r\n\t...pokeselection\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\tdispatch(loadPokemonList)\r\n\r\n\treturn {\r\n\t\ttoggleNeededPokemonSelection: pokemonId => dispatch(toggleNeededPokemonSelection(pokemonId)),\r\n\t\ttoggleOfferedPokemonSelection: pokemonId => dispatch(toggleOfferedPokemonSelection(pokemonId)),\r\n\t\tupdateSearchValue: value => dispatch(updateSearchValue(value))\r\n\t}\r\n}\r\n\r\nexport default connect(\r\n\tmapStatesToProps,\r\n\tmapDispatchToProps\r\n)(Pokeselection)\r\n","import React, { Component } from 'react'\r\nimport { Image, Text } from 'react-konva'\r\n\r\nclass Pokesprite extends Component {\r\n\tstate = {\r\n\t\timage: undefined\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst image = new window.Image()\r\n\t\timage.src = this.props.url\r\n\t\timage.onload = () => this.setState({ image })\r\n\t\timage.onerror = () => this.setState({ image: null })\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { x, y } = this.props\r\n\r\n\t\treturn this.state.image === undefined ? (\r\n\t\t\t<Text text=\"Loading sprite...\" x={x} y={y} />\r\n\t\t) : this.state.image ? (\r\n\t\t\t<Image image={this.state.image} x={x} y={y} />\r\n\t\t) : (\r\n\t\t\t<Text text=\"Sprite not found!\" x={x} y={y} />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Pokesprite\r\n","import React, { Component } from 'react'\r\nimport { Text, Rect } from 'react-konva'\r\nimport Pokesprite from './Pokesprite.jsx'\r\n\r\nclass Pokesection extends Component {\r\n\trender() {\r\n\t\tconst { spriteUrls, text, config, yOffset, gradientColors } = this.props\r\n\r\n\t\tconst width = Math.min(config.sprite.perRow, spriteUrls.length) * config.sprite.offset.x\r\n\t\tconst height = Math.ceil(spriteUrls.length / config.sprite.perRow) * config.sprite.offset.y\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Rect\r\n\t\t\t\t\ty={yOffset}\r\n\t\t\t\t\twidth={width}\r\n\t\t\t\t\theight={height}\r\n\t\t\t\t\tfillLinearGradientStartPoint={{ x: 0, y: 0 }}\r\n\t\t\t\t\tfillLinearGradientEndPoint={{ x: width, y: height }}\r\n\t\t\t\t\tfillLinearGradientColorStops={[0, gradientColors[0], 1, gradientColors[1]]}\r\n\t\t\t\t/>\r\n\t\t\t\t<Text\r\n\t\t\t\t\ty={yOffset}\r\n\t\t\t\t\ttext={text}\r\n\t\t\t\t\twidth={width}\r\n\t\t\t\t\theight={height}\r\n\t\t\t\t\talign=\"center\"\r\n\t\t\t\t\tverticalAlign=\"middle\"\r\n\t\t\t\t\tfontFamily=\"Staatliches\"\r\n\t\t\t\t\tfontSize={48}\r\n\t\t\t\t/>\r\n\t\t\t\t{spriteUrls.map((url, i) => {\r\n\t\t\t\t\tconst x = config.sprite.offset.x * (i % config.sprite.perRow)\r\n\t\t\t\t\tconst y = config.sprite.offset.y * Math.floor(i / config.sprite.perRow) + yOffset\r\n\t\t\t\t\treturn <Pokesprite key={url} url={url} x={x} y={y} />\r\n\t\t\t\t})}\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Pokesection\r\n","import React, { Component } from 'react'\r\nimport { Stage, Layer } from 'react-konva'\r\nimport Pokesection from './Pokesection.jsx'\r\n\r\nconst config = {\r\n\tsprite: {\r\n\t\toffset: { x: 100, y: 100 },\r\n\t\tperRow: 10\r\n\t}\r\n}\r\n\r\nexport default class extends Component {\r\n\trender() {\r\n\t\tconst { neededSpriteUrls, offeredSpriteUrls } = this.props\r\n\r\n\t\tconst width1 = Math.min(config.sprite.perRow, neededSpriteUrls.length) * config.sprite.offset.x\r\n\t\tconst height1 =\r\n\t\t\tMath.ceil(neededSpriteUrls.length / config.sprite.perRow) * config.sprite.offset.y\r\n\r\n\t\tconst width2 = Math.min(config.sprite.perRow, offeredSpriteUrls.length) * config.sprite.offset.x\r\n\t\tconst height2 =\r\n\t\t\tMath.ceil(offeredSpriteUrls.length / config.sprite.perRow) * config.sprite.offset.y\r\n\t\treturn (\r\n\t\t\t<Stage width={Math.max(width1, width2)} height={height1 + height2}>\r\n\t\t\t\t<Layer>\r\n\t\t\t\t\t<Pokesection\r\n\t\t\t\t\t\tspriteUrls={neededSpriteUrls}\r\n\t\t\t\t\t\ttext=\"Pokemons I'm looking for\"\r\n\t\t\t\t\t\tconfig={config}\r\n\t\t\t\t\t\tyOffset={0}\r\n\t\t\t\t\t\tgradientColors={['#113977', '#4689f2']}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Pokesection\r\n\t\t\t\t\t\tspriteUrls={offeredSpriteUrls}\r\n\t\t\t\t\t\ttext=\"Pokemons I can give\"\r\n\t\t\t\t\t\tconfig={config}\r\n\t\t\t\t\t\tyOffset={height1}\r\n\t\t\t\t\t\tgradientColors={['#166021', '#46f15f']}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Layer>\r\n\t\t\t</Stage>\r\n\t\t)\r\n\t}\r\n}\r\n","import { connect } from 'react-redux'\r\n\r\nimport urls from '../constants/api.json'\r\n\r\nimport Pokepreview from '../components/Pokepreview'\r\n\r\nconst mapStatesToProps = ({ pokeselection }) => ({\r\n\tneededSpriteUrls: pokeselection.neededPokemons.map(id => urls.sprite.replace(':id', id)),\r\n\tofferedSpriteUrls: pokeselection.offeredPokemons.map(id => urls.sprite.replace(':id', id))\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {}\r\n}\r\n\r\nexport default connect(\r\n\tmapStatesToProps,\r\n\tmapDispatchToProps\r\n)(Pokepreview)\r\n","import React, { Component } from 'react'\nimport { Provider } from 'react-redux'\nimport Pokeselection from '../containers/Pokeselection'\nimport Pokepreview from '../containers/Pokepreview'\nimport store from '../store'\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Provider store={store}>\n\t\t\t\t<Pokeselection />\n\t\t\t\t<Pokepreview />\n\t\t\t</Provider>\n\t\t)\n\t}\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App.jsx'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}